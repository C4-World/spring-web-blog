<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/cache
                           http://www.springframework.org/schema/cache/spring-cache.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd">

    <context:component-scan base-package="com.kycool.blog.*" use-default-filters="true">
        <!--不扫描 @Controller 注解的类-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
    </context:component-scan>

    <!--载入数据库配置文件-->
<!--    <context:property-placeholder location="classpath:db.properties" ignore-unresolvable="true"/>-->

    <!-- 配置数据源 -->
<!--    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
<!--        <property name="url" value="${jdbc_url}"/>-->
<!--        <property name="username" value="${jdbc_username}"/>-->
<!--        <property name="password" value="${jdbc_password}"/>-->
<!--        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />-->

<!--        &lt;!&ndash; 初始化连接大小 &ndash;&gt;-->
<!--        <property name="initialSize" value="0"/>-->
<!--        &lt;!&ndash; 连接池最大使用连接数量 &ndash;&gt;-->
<!--        <property name="maxActive" value="20"/>-->
<!--        &lt;!&ndash; 连接池最小空闲 &ndash;&gt;-->
<!--        <property name="minIdle" value="0"/>-->
<!--        &lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;-->
<!--        <property name="maxWait" value="60000"/>-->
<!--        <property name="testOnBorrow" value="false"/>-->
<!--        <property name="testOnReturn" value="false"/>-->
<!--        <property name="testWhileIdle" value="true"/>-->
<!--        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
<!--        <property name="timeBetweenEvictionRunsMillis" value="60000"/>-->
<!--        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
<!--        <property name="minEvictableIdleTimeMillis" value="25200000"/>-->
<!--        &lt;!&ndash; 打开 removeAbandoned功能 &ndash;&gt;-->
<!--        <property name="removeAbandoned" value="true"/>-->
<!--        &lt;!&ndash; 1800秒，也就是 30分钟 &ndash;&gt;-->
<!--        <property name="removeAbandonedTimeout" value="1800"/>-->
<!--        &lt;!&ndash; 关闭 abanded 连接时输出错误日志 &ndash;&gt;-->
<!--        <property name="logAbandoned" value="true"/>-->
<!--        &lt;!&ndash; 监控数据库 &ndash;&gt;-->
<!--        &lt;!&ndash; <property name="filters" value="stat" /> &ndash;&gt;-->
<!--        <property name="filters" value="mergeStat"/>-->
<!--    </bean>-->

<!--    &lt;!&ndash; 配置 hibernate session 工厂，需添加 spring-orm&ndash;&gt;-->
<!--    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">-->
<!--        <property name="dataSource" ref="dataSource"/>-->
<!--        &lt;!&ndash; 自动扫描注解方式配置的 hibernate 类文件 &ndash;&gt;-->

<!--        <property name="annotatedClasses">-->
<!--            <list>-->
<!--                <value>com.ruiangeo.springbox.model.UserPO</value>-->
<!--            </list>-->
<!--        </property>-->

<!--        <property name="hibernateProperties">-->
<!--            <props>-->
<!--                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->
<!--                <prop key="hibernate.dialect">${hibernate.dialect}</prop>-->
<!--                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>-->
<!--                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

<!--    &lt;!&ndash; 配置事务管理器 &ndash;&gt;-->
<!--    <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">-->
<!--        <property name="sessionFactory" ref="sessionFactory"/>-->
<!--    </bean>-->

<!--    &lt;!&ndash; 1 基于 <tx> 和 <aop> 命名空间的声明式事务管理：transaction-manager指定事务管理器为transactionManager- &ndash;&gt;-->
<!--    <tx:advice id="transactionAdvice">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="add*" rollback-for="Exception" propagation="REQUIRED"/>-->
<!--            <tx:method name="save*" rollback-for="Exception" propagation="REQUIRED"/>-->
<!--            <tx:method name="insert*" rollback-for="Exception" propagation="REQUIRED"/>-->
<!--            <tx:method name="update*" rollback-for="Exception" propagation="REQUIRED"/>-->
<!--            <tx:method name="edit*" rollback-for="Exception" propagation="REQUIRED"/>-->
<!--            <tx:method name="modify*" rollback-for="Exception" propagation="REQUIRED"/>-->
<!--            <tx:method name="delete*" rollback-for="Exception" propagation="REQUIRED"/>-->
<!--            <tx:method name="remove*" rollback-for="Exception" propagation="REQUIRED"/>-->

<!--            <tx:method name="get*" propagation="NOT_SUPPORTED" read-only="true"/>-->
<!--            <tx:method name="find*" propagation="NOT_SUPPORTED" read-only="true"/>-->
<!--            <tx:method name="list*" propagation="NOT_SUPPORTED" read-only="true"/>-->
<!--            <tx:method name="select*" propagation="NOT_SUPPORTED" read-only="true"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->

<!--    <tx:annotation-driven transaction-manager="transactionManager"/>-->




</beans>
